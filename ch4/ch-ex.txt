1. `[a] -> b :: Integer`
2.
  a. `5`
  b. `3`
  c. `2`
  d. `5`
3. Second returns an error
4. ???
5. `2 + 3 == 5 :: Bool`
6. ???
7. 
  a. yes, `True`
  b. no, not a valid list
  c. yes, 5
  d. yes, `False`
  e. no, `9` is not a `Bool`
8. ```
  isPalindrome :: (eq a) => [a] -> Bool
  isPalindrome x = x == reverse x
```
9. ```
  myAbs :: Integer -> Integer
  myAbs x = if x > 0
            then x
            else -(x)
```
10. ```
  f :: (a, b) -> (c, d) -> ((b, d), (a, c))
  ???
```
